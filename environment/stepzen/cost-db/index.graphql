type cost {
  type: String!
  resource_id: Int!
  name: String!
  is_paid: Boolean
  description: String
  amount: String!
}

extend type cost {
  resource: Resource
    @materializer(
      query: "resourceById"
      arguments: [{ name: "id", field: "resource_id" }]
    )
}

"""
The following queries are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Query {
  " Queries for type 'cost' "
  costByIs_paid(is_paid: Boolean!): [cost]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "cost"
      configuration: "cost-db-config"
    )
  costByIs_paidAndName(is_paid: Boolean!, name: String!): [cost]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "cost"
      configuration: "cost-db-config"
    )
  costList: [cost]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "cost"
      configuration: "cost-db-config"
    )
  costPaginatedList(first: Int, after: Int): [cost]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "amount", "description", "is_paid", "name", "resource_id", "type" FROM "cost" LIMIT $1 OFFSET $2
      """
      configuration: "cost-db-config"
    )
}

"""
The following mutations are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Mutation {
  " Mutations for type 'cost' "
  deleteCost(
    name: String!
    description: String!
    amount: String!
    is_paid: Boolean!
    type: String!
    resource_id: Int!
  ): cost
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "cost"
      dml: DELETE
      configuration: "cost-db-config"
    )
  insertCost(
    name: String!
    description: String
    amount: String!
    is_paid: Boolean
    type: String!
    resource_id: Int!
  ): cost
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "cost"
      dml: INSERT
      configuration: "cost-db-config"
    )
}
